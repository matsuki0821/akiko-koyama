---
import { site } from '@/config/site';
const nav = [
  { href: '/projects', label: '私たちについて' },
  { href: '/pricing', label: '料金' },
  // { href: '/services/school-support', label: '登校サポート' }, // temporarily hidden
  { href: '/reviews', label: '受講者の声' },
  { href: '/blog', label: 'ブログ' },
  { href: '/about', label: '講師について' }
];
---
<header id="site-header" data-scrolled="false" class="sticky top-0 z-50 bg-white shadow-sm transition-colors duration-300">
  <div class="section flex h-14 items-center justify-between">
    <a href="/" class="flex items-center gap-3 font-extrabold text-base-900">
      <img src="/slide1-v2.jpg" alt="WHOLE LIFE 認定講座 ロゴ" class="h-9 w-9 sm:h-10 sm:w-10 object-contain" loading="lazy" decoding="async" />
      <span class="text-lg sm:text-xl">{site.brand}</span>
    </a>
    <nav class="hidden md:flex items-center">
      {nav.map((n) => (
        <a class="relative ml-3 first:ml-0 text-sm font-semibold text-base-900 pl-4 pr-3 py-1 first:before:hidden before:content-[''] before:absolute before:left-0 before:top-1/2 before:-translate-y-1/2 before:transform before:w-px before:h-1/2 before:bg-base-900/30"
          href={n.href}>{n.label}</a>
      ))}
    </nav>
    <a href="/contact" class="hidden md:inline-flex items-center gap-2 rounded-full bg-primary px-5 py-2.5 text-white shadow-lg ring-1 ring-primary/20 hover:bg-primary-600 hover:shadow-xl transition-transform hover:-translate-y-0.5">お問い合わせ</a>

    {/* Hamburger button (mobile only) */}
    <button id="menu-toggle" class="md:hidden inline-flex items-center justify-center rounded-full p-2.5 bg-white/95 text-base-900 shadow ring-1 ring-black/10 hover:bg-white focus:outline-none focus:ring-2 focus:ring-primary" aria-controls="mobile-menu" aria-expanded="false" aria-label="メニューを開く">
      <svg id="icon-hamburger" class="h-6 w-6 block" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="3" y1="6" x2="21" y2="6" />
        <line x1="3" y1="12" x2="21" y2="12" />
        <line x1="3" y1="18" x2="21" y2="18" />
      </svg>
      <svg id="icon-close" class="h-6 w-6 hidden" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="18" y1="6" x2="6" y2="18" />
        <line x1="6" y1="6" x2="18" y2="18" />
      </svg>
    </button>
  </div>

  <script is:inline>
    const header = document.getElementById('site-header');
    const onScroll = () => {
      const scrolled = window.scrollY > 8;
      if (header) header.dataset.scrolled = scrolled ? 'true' : 'false';
    };
    onScroll();
    window.addEventListener('scroll', onScroll, { passive: true });
  </script>
</header>

{/* Overlay + Slide-in drawer moved outside header to avoid stacking-context clipping */}
<div id="menu-overlay" class="fixed inset-0 z-[9000] bg-black/70 opacity-0 invisible pointer-events-none transition-opacity duration-300 md:hidden" aria-hidden="true"></div>
<aside id="mobile-menu" class="fixed inset-y-0 right-0 z-[10000] w-80 max-w-[85vw] translate-x-full bg-black text-white shadow-xl transition-transform duration-300 pointer-events-auto md:hidden">
  <div class="relative h-full flex flex-col">
    <div class="relative z-10 flex items-center justify-between p-4 border-b border-white/10">
      <a href="/" class="flex items-center gap-3 text-white font-extrabold">
        <img src="/slide1-v2.jpg" alt="WHOLE LIFE 認定講座 ロゴ" class="h-7 w-7 object-contain" loading="lazy" decoding="async" />
        <span class="text-base">{site.brand}</span>
      </a>
      <button id="menu-close" class="inline-flex items-center justify-center rounded-full p-2 text-white/90 hover:text-white focus:outline-none focus:ring-2 focus:ring-white/40">
        <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18" />
          <line x1="6" y1="6" x2="18" y2="18" />
        </svg>
      </button>
    </div>
    {/* Watermark */}
    <div class="pointer-events-none select-none absolute inset-0 grid place-items-center">
      <span class="text-6xl font-extrabold tracking-widest text-white opacity-10">WHOLE LIFE</span>
    </div>

    <div class="relative flex-1 overflow-y-auto p-6 z-[1001]">
      <nav class="space-y-4">
        {nav.map((n) => (
          <a href={n.href} class="block text-lg font-medium text-white hover:text-primary transition-colors">{n.label}</a>
        ))}
      </nav>

      <div class="mt-8 space-y-3">
        <a href="/contact" class="block text-center rounded-full bg-white px-5 py-2 font-medium text-base-900 hover:bg-primary/10 transition-colors">お問い合わせ</a>
        <a href="/contact?from=materials" class="block text-center rounded-full bg-white px-5 py-2 font-medium text-base-900 hover:bg-primary/10 transition-colors">資料請求</a>
      </div>
    </div>

    
  </div>
</aside>

<script is:inline>
  window.addEventListener('DOMContentLoaded', () => {
    const toggleBtn = document.getElementById('menu-toggle');
    const drawer = document.getElementById('mobile-menu');
    const overlay = document.getElementById('menu-overlay');
    const iconOpen = document.getElementById('icon-hamburger');
    const iconClose = document.getElementById('icon-close');
    const closeBtn = document.getElementById('menu-close');

    // Ensure overlay/drawer are appended to <body> so fixed covers full viewport
    if (overlay && overlay.parentElement !== document.body) document.body.appendChild(overlay);
    if (drawer && drawer.parentElement !== document.body) document.body.appendChild(drawer);

    const openMenu = () => {
      drawer?.classList.remove('translate-x-full');
      overlay?.classList.remove('opacity-0', 'invisible', 'pointer-events-none');
      toggleBtn?.setAttribute('aria-expanded', 'true');
      toggleBtn?.setAttribute('aria-label', 'メニューを閉じる');
      iconOpen?.classList.add('hidden');
      iconClose?.classList.remove('hidden');
      document.documentElement.classList.add('overflow-hidden');
    };
    const closeMenu = () => {
      drawer?.classList.add('translate-x-full');
      overlay?.classList.add('opacity-0', 'invisible', 'pointer-events-none');
      toggleBtn?.setAttribute('aria-expanded', 'false');
      toggleBtn?.setAttribute('aria-label', 'メニューを開く');
      iconOpen?.classList.remove('hidden');
      iconClose?.classList.add('hidden');
      document.documentElement.classList.remove('overflow-hidden');
    };

    toggleBtn?.addEventListener('click', () => {
      const expanded = toggleBtn?.getAttribute('aria-expanded') === 'true';
      if (expanded) closeMenu(); else openMenu();
    });
    closeBtn?.addEventListener('click', closeMenu);
    overlay?.addEventListener('click', closeMenu);
    window.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') closeMenu();
    });

    closeMenu();
  });
</script>


